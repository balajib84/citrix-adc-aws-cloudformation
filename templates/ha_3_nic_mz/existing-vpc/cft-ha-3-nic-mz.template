AWSTemplateFormatVersion: 2010-09-09

Description: >-
  "This template creates a HA pair across Availability Zones with two instance of Citrix ADC: 3 ENIs associated to 3 VPC subnets (Management, Client, Server) on primary and 3 ENIs associated to 3 VPC subnets (Management, Client, Server) on secondary."

Parameters:
  CitrixADCImageID:
    Type: String
    Default: ""
    Description: >-
      AMI ID of Citrix ADC to be provisioned. If left empty, "Citrix ADC VPX - Customer Licensed Version 13.0-52.24 (https://aws.amazon.com/marketplace/pp/B00AA01BOE)" is provisioned by default
  VpcId:
    Type: "AWS::EC2::VPC::Id"
    Description: VpcId of your existing Virtual Private Cloud (VPC)
  SSHCidrIp:
    Type: String
    MinLength: "9"
    MaxLength: "18"
    Description: "The IP address range that can SSH to the EC2 instance (port: 22)."
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
  HTTPCidrIp:
    Default: 0.0.0.0/0
    Type: String
    MinLength: "9"
    MaxLength: "18"
    Description: "The IP address range that can HTTP to the EC2 instance (port: 80)."
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
  HTTPSCidrIp:
    Default: 0.0.0.0/0
    Type: String
    MinLength: "9"
    MaxLength: "18"
    Description: "The IP address range that can HTTPS to the EC2 instance (port: 443)."
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: "AWS::EC2::KeyPair::KeyName"
  PriManagementIP:
    Default: ""
    Type: String
    Description: >-
      Private IP assigned to the Primary Management ENI (last octet has to be
      between 5 and 254). Leave empty for automatic assignment.
  PriManagementSubnet:
    Type: "AWS::EC2::Subnet::Id"
    Description: >-
      SubnetId of an existing subnet in your Virtual Private Cloud (VPC)
      dedicated for Primary Management IP.
      Note - The CIDR should be different from that of VPC.
  PriClientIP:
    Default: ""
    Type: String
    Description: >-
      Private IP assigned to the Primary Client ENI (last octet has to be between 5 and
      254). Leave empty for automatic assignment.
  PriClientSubnet:
    Type: "AWS::EC2::Subnet::Id"
    Description: >-
      SubnetId of an existing subnet in your Virtual Private Cloud (VPC)
      dedicated for Primary Client side
  PriServerIP:
    Default: ""
    Type: String
    Description: >-
      Private IP assigned to the Primary Server ENI (last octet has to be between 5 and
      254). Leave empty for automatic assignment.
  PriServerSubnet:
    Type: "AWS::EC2::Subnet::Id"
    Description: >-
      SubnetId of an existing subnet in your Virtual Private Cloud (VPC)
      dedicated for Primary Server side.
  SecManagementIP:
    Default: ""
    Type: String
    Description: >-
      Private IP assigned to the Secondary Management ENI (last octet has to be
      between 5 and 254). Leave empty for automatic assignment.
  SecManagementSubnet:
    Type: "AWS::EC2::Subnet::Id"
    Description: >-
      SubnetId of an existing subnet in your Virtual Private Cloud (VPC)
      dedicated for Secondary Management IP
  SecClientIP:
    Default: ""
    Type: String
    Description: >-
      Private IP assigned to the Secondary Client ENI (last octet has to be between 5 and
      254). Leave empty for automatic assignment.
  SecClientSubnet:
    Type: "AWS::EC2::Subnet::Id"
    Description: >-
      SubnetId of an existing subnet in your Virtual Private Cloud (VPC)
      dedicated for Secondary Client side
  SecServerIP:
    Default: ""
    Type: String
    Description: >-
      Private IP assigned to the Secondary Server ENI (last octet has to be between 5 and
      254). Leave empty for automatic assignment.
  SecServerSubnet:
    Type: "AWS::EC2::Subnet::Id"
    Description: >-
      SubnetId of an existing subnet in your Virtual Private Cloud (VPC)
      dedicated for Secondary Server side.
  InstanceType:
    Default: m4.xlarge
    ConstraintDescription: Must be a valid EC2 instance type.
    Type: String
    Description: Type of Citrix ADC instance
    AllowedValues:
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
  TenancyType:
    Default: default
    Type: String
    Description: Tenancy Model
    AllowedValues:
      - default
      - dedicated

Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: Citrix ADC Image
        Parameters:
          - CitrixADCImageID
      - Label:
          default: Virtual Private Network Configuration
        Parameters:
          - VpcId
          - SSHCidrIp
          - HTTPCidrIp
          - HTTPSCidrIp

      - Label:
          default: Network Interface Configuration
        Parameters:
          - PriManagementIP
          - PriManagementSubnet
          - PriClientIP
          - PriClientSubnet
          - PriServerIP
          - PriServerSubnet
          - SecManagementIP
          - SecManagementSubnet
          - SecClientIP
          - SecClientSubnet
          - SecServerIP
          - SecServerSubnet

      - Label:
          default: Instance Configuration
        Parameters:
          - KeyName
          - TenancyType
          - InstanceType

    ParameterLabels:
      CitrixADCImageID:
        default: Citrix ADC AMI ID

      VpcId:
        default: VPC ID*
      SSHCidrIp:
        default: Remote SSH CIDR IP*
      HTTPCidrIp:
        default: Remote HTTP CIDR IP*
      HTTPSCidrIp:
        default: Remote HTTPS CIDR IP*
      KeyName:
        default: Key Pair

      PriManagementIP:
        default: Primary Management IP
      PriManagementSubnet:
        default: Primary Management Subnet*
      PriClientIP:
        default: Primary Client IP
      PriClientSubnet:
        default: Primary Client Subnet*
      PriServerIP:
        default: Primary Server IP
      PriServerSubnet:
        default: Primary Server Subnet*
      SecManagementIP:
        default: Secondary Management IP
      SecManagementSubnet:
        default: Secondary Management Subnet*
      SecClientIP:
        default: Secondary Client IP
      SecClientSubnet:
        default: Secondary Client Subnet*
      SecServerIP:
        default: Secondary Server IP
      SecServerSubnet:
        default: Secondary Server Subnet*

      InstanceType:
        default: Instant Type*
      TenancyType:
        default: Tenancy Model*

Conditions:
  UseCitrixADCImageID: !Not
    - !Equals
      - !Ref CitrixADCImageID
      - ""
  UsePriManagementIP: !Not
    - !Equals
      - !Ref PriManagementIP
      - ""
  UsePriClientIP: !Not
    - !Equals
      - !Ref PriClientIP
      - ""
  UsePriServerIP: !Not
    - !Equals
      - !Ref PriServerIP
      - ""

  UseSecManagementIP: !Not
    - !Equals
      - !Ref SecManagementIP
      - ""
  UseSecClientIP: !Not
    - !Equals
      - !Ref SecClientIP
      - ""
  UseSecServerIP: !Not
    - !Equals
      - !Ref SecServerIP
      - ""

Resources:
  SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Enable SSH access via port 22, HTTP with port 80 and HTTPS with port 443"
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHCidrIp
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref HTTPCidrIp
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref HTTPSCidrIp
  InboundRule:
    Type: "AWS::EC2::SecurityGroupIngress"
    Properties:
      IpProtocol: tcp
      FromPort: 0
      ToPort: 65535
      SourceSecurityGroupId: !GetAtt
        - SecurityGroup
        - GroupId
      GroupId: !GetAtt
        - SecurityGroup
        - GroupId

  CitrixNodesInstanceRole:
    Type: "AWS::IAM::Role"
    Properties:
      Path: /
      Policies:
        - PolicyName: Citrixnode
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - "ec2:DescribeAddresses"
                  - "ec2:AssociateAddress"
                  - "ec2:DisassociateAddress"
                  - "ec2:DescribeInstances"
                  - "ec2:DescribeNetworkInterfaces"
                  - "ec2:DetachNetworkInterface"
                  - "ec2:AttachNetworkInterface"
                  - "ec2:StopInstances"
                  - "ec2:StartInstances"
                  - "ec2:RebootInstances"
                  - "autoscaling:*"
                  - "sns:*"
                  - "sqs:*"
                  - "iam:GetRole"
                  - "iam:SimulatePrincipalPolicy"
                Resource: "*"
                Effect: Allow
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
  CitrixNodesProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: /
      Roles:
        - !Ref CitrixNodesInstanceRole

  PriNsipENI:
    Type: "AWS::EC2::NetworkInterface"
    Properties:
      SubnetId: !Ref PriManagementSubnet
      GroupSet:
        - !Ref SecurityGroup
      Description: ENI connected to Primary Management Subnet
      PrivateIpAddress: !If
        - UsePriManagementIP
        - !Ref PriManagementIP
        - !Ref "AWS::NoValue"
      SecondaryPrivateIpAddressCount: 1
  PriClientENI:
    Type: "AWS::EC2::NetworkInterface"
    Properties:
      SubnetId: !Ref PriClientSubnet
      GroupSet:
        - !Ref SecurityGroup
      Description: ENI connected to Primary Client Subnet
      PrivateIpAddress: !If
        - UsePriClientIP
        - !Ref PriClientIP
        - !Ref "AWS::NoValue"
  PriServerENI:
    Type: "AWS::EC2::NetworkInterface"
    Properties:
      SubnetId: !Ref PriServerSubnet
      GroupSet:
        - !Ref SecurityGroup
      Description: ENI connected to Primary Server Subnet
      PrivateIpAddress: !If
        - UsePriServerIP
        - !Ref PriServerIP
        - !Ref "AWS::NoValue"
  PriEipNsip:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
  AssociateEipNsip:
    Type: "AWS::EC2::EIPAssociation"
    Properties:
      NetworkInterfaceId: !Ref PriNsipENI
      AllocationId: !GetAtt
        - PriEipNsip
        - AllocationId
  PriEipClientIP:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
  AssociateEipClientIP:
    Type: "AWS::EC2::EIPAssociation"
    Properties:
      NetworkInterfaceId: !Ref PriClientENI
      AllocationId: !GetAtt
        - PriEipClientIP
        - AllocationId
  PriVPXInstance:
    Type: "AWS::EC2::Instance"
    Properties:
      Tags:
        - Key: Name
          Value: NetscalerPrimary
        - Key: topic
          Value: !Join
            - ""
            - - NS_SNS_
              - !Select
                - "4"
                - !Split
                  - ":"
                  - !GetAtt
                    - CitrixNodesProfile
                    - Arn
      ImageId: !If
        - UseCitrixADCImageID
        - !Ref CitrixADCImageID
        - !FindInMap
          - AWSAMIRegionMap
          - !Ref AWS::Region
          - CITRIXADC
      KeyName: !Ref KeyName
      Tenancy: !Ref TenancyType
      IamInstanceProfile: !Ref CitrixNodesProfile
      InstanceType: !Ref InstanceType
      NetworkInterfaces:
        - DeviceIndex: "0"
          NetworkInterfaceId: !Ref PriNsipENI
        - DeviceIndex: "1"
          NetworkInterfaceId: !Ref PriClientENI
        - DeviceIndex: "2"
          NetworkInterfaceId: !Ref PriServerENI
  WaitHandle:
    Type: "AWS::CloudFormation::WaitConditionHandle"
    Properties: {}
  PriWaitCondition:
    Type: "AWS::CloudFormation::WaitCondition"
    DependsOn: PriVPXInstance
    Properties:
      Count: 0
      Handle: !Ref WaitHandle
      Timeout: "200"

  SecNsipENI:
    Type: "AWS::EC2::NetworkInterface"
    Properties:
      SubnetId: !Ref SecManagementSubnet
      GroupSet:
        - !Ref SecurityGroup
      Description: ENI connected to Secondary Management Subnet
      PrivateIpAddress: !If
        - UseSecManagementIP
        - !Ref SecManagementIP
        - !Ref "AWS::NoValue"
      SecondaryPrivateIpAddressCount: 1
  SecClientENI:
    Type: "AWS::EC2::NetworkInterface"
    Properties:
      SubnetId: !Ref SecClientSubnet
      GroupSet:
        - !Ref SecurityGroup
      Description: ENI connected to Secondary Client Subnet
      PrivateIpAddress: !If
        - UseSecClientIP
        - !Ref SecClientIP
        - !Ref "AWS::NoValue"
  SecServerENI:
    Type: "AWS::EC2::NetworkInterface"
    Properties:
      SubnetId: !Ref SecServerSubnet
      GroupSet:
        - !Ref SecurityGroup
      Description: ENI connected to Secondary Server Subnet
      PrivateIpAddress: !If
        - UseSecServerIP
        - !Ref SecServerIP
        - !Ref "AWS::NoValue"
  EipSecNsip:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
  AssociateEipSecNsip:
    Type: "AWS::EC2::EIPAssociation"
    Properties:
      NetworkInterfaceId: !Ref SecNsipENI
      AllocationId: !GetAtt
        - EipSecNsip
        - AllocationId

  SecVPXInstance:
    Type: "AWS::EC2::Instance"
    Properties:
      Tags:
        - Key: Name
          Value: NetscalerSecondary
        - Key: topic
          Value: !Join
            - ""
            - - NS_SNS_
              - !Select
                - "4"
                - !Split
                  - ":"
                  - !GetAtt
                    - CitrixNodesProfile
                    - Arn
      ImageId: !If
        - UseCitrixADCImageID
        - !Ref CitrixADCImageID
        - !FindInMap
          - AWSAMIRegionMap
          - !Ref AWS::Region
          - CITRIXADC
      KeyName: !Ref KeyName
      Tenancy: !Ref TenancyType
      IamInstanceProfile: !Ref CitrixNodesProfile
      InstanceType: !Ref InstanceType
      NetworkInterfaces:
        - DeviceIndex: "0"
          NetworkInterfaceId: !Ref SecNsipENI
        - DeviceIndex: "1"
          NetworkInterfaceId: !Ref SecClientENI
        - DeviceIndex: "2"
          NetworkInterfaceId: !Ref SecServerENI
  SecWaitCondition:
    Type: "AWS::CloudFormation::WaitCondition"
    DependsOn: SecVPXInstance
    Properties:
      Count: 0
      Handle: !Ref WaitHandle
      Timeout: "200"

  LambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: lambdalogtocloudwatch
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "logs:CreateExportTask"
                  - "logs:DescribeExportTask"
                Resource: "arn:aws:logs:*:*:*"
        - PolicyName: lambdaallowreadec2
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - "ec2:DescribeInstances"
                  - "ec2:DescribeNetworkInterfaces"
                  - "ec2:DescribeSubnets"
                  - "ec2:DescribeVpcs"
                  - "ec2:DescribeAvailabilityZones"
                  - "ec2:DescribeInstanceStatus"
                Resource: "*"
                Effect: Allow
  ConfigureHAFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: !Join
          - ""
          - - ns-vpx-cft-fn-
            - !Ref "AWS::Region"
        S3Key: lambda-ha-3-nic-mz.zip
      Handler: lambda-ha-3-nic-mz.lambda_handler
      Runtime: python3.6
      Timeout: 900
      Role: !GetAtt
        - LambdaExecutionRole
        - Arn
  ConfigureLambda:
    Type: "Custom::LambdaCallout"
    DependsOn:
      - PriWaitCondition
      - SecWaitCondition
    Properties:
      ServiceToken: !GetAtt
        - ConfigureHAFunction
        - Arn
      PriInstanceID: !Ref PriVPXInstance
      PriPubNSIP: !Ref PriEipNsip
      PriNSIP: !GetAtt PriNsipENI.PrimaryPrivateIpAddress
      PriVIP: !GetAtt PriClientENI.PrimaryPrivateIpAddress
      PriVIPSubnet: !Ref PriClientSubnet
      SecInstanceID: !Ref SecVPXInstance
      SecPubNSIP: !Ref EipSecNsip
      SecNSIP: !GetAtt SecNsipENI.PrimaryPrivateIpAddress
      SecVIP: !GetAtt SecClientENI.PrimaryPrivateIpAddress

Outputs:
  PrimaryVPXManagementURL:
    Description: HTTPS URL to the Management GUI of Primary VPX (uses self-signed cert)
    Value: !Join
      - ""
      - - "https://"
        - !GetAtt
          - PriVPXInstance
          - PublicIp
  PrimaryVPXManagementURL2:
    Description: HTTP URL to the Management GUI of Primary VPX
    Value: !Join
      - ""
      - - "http://"
        - !GetAtt
          - PriVPXInstance
          - PublicIp
  PrimaryInstanceIdNS:
    Description: Instance Id of newly created Primary VPX instance
    Value: !Ref PriVPXInstance
  PrimaryVPXPublicIpVIP:
    Description: Elastic IP address of the Primary VPX instance associated with the VIP
    Value: !Ref PriEipClientIP
  PrimaryVPXNSIp:
    Description: Private IP (NS IP) used for management of Primary VPX
    Value: !GetAtt
      - PriVPXInstance
      - PrivateIp
  PrimaryVPXPublicNSIp:
    Description: Public IP (NS IP) used for management of Primary VPX
    Value: !GetAtt
      - PriVPXInstance
      - PublicIp
  PrimaryVPXPrivateVIP:
    Description: Private IP address of the Primary VPX instance associated with the VIP
    Value: !GetAtt PriClientENI.PrimaryPrivateIpAddress
  PrimaryVPXSNIP:
    Description: Private IP address of the Primary VPX instance associated with the SNIP
    Value: !GetAtt PriServerENI.PrimaryPrivateIpAddress

  SecondaryVPXManagementURL:
    Description: HTTPS URL to the Management GUI of Secondary VPX (uses self-signed cert)
    Value: !Join
      - ""
      - - "https://"
        - !GetAtt
          - SecVPXInstance
          - PublicIp
  SecondaryVPXManagementURL2:
    Description: HTTP URL to the Management GUI of Secondary VPX
    Value: !Join
      - ""
      - - "http://"
        - !GetAtt
          - SecVPXInstance
          - PublicIp
  SecodnaryInstanceIdNS:
    Description: Instance Id of newly created Secondary VPX instance
    Value: !Ref SecVPXInstance
  SecondaryVPXNSIp:
    Description: Private IP (NS IP) used for management of Secondary VPX
    Value: !GetAtt
      - SecVPXInstance
      - PrivateIp
  SecondaryVPXPublicNSIp:
    Description: Public IP (NS IP) used for management of Secondary VPX
    Value: !GetAtt
      - SecVPXInstance
      - PublicIp
  SecondaryVPXPrivateVIP:
    Description: Private IP address of the Secondary VPX instance associated with the VIP
    Value: !GetAtt SecClientENI.PrimaryPrivateIpAddress
  SecondaryVPXSNIP:
    Description: Private IP address of the Secondary VPX instance associated with the SNIP
    Value: !GetAtt SecServerENI.PrimaryPrivateIpAddress

  SecurityGroup:
    Description: Security group id that the VPX belongs to
    Value: !Ref SecurityGroup

Mappings:
  AWSAMIRegionMap:
    AMI:
      CITRIXADC: Citrix NetScaler and CloudBridge Connector 13.0-52.24-64-63425ded-82f0-4b54-8cdd-6ec8b94bd4f8-ami-05e241fd9b61abb3a.4
    us-gov-west-1:
      CITRIXADC: ami-00d2e361
    us-gov-east-1:
      CITRIXADC: ami-21f11d50
    us-east-2: # US East (Ohio)
      CITRIXADC: ami-0e8e26c508fa94732
    us-east-1: # US East (N. Virginia)
      CITRIXADC: ami-0bb96d1f8f79db909
    us-west-1: # US West (N. California)
      CITRIXADC: ami-0707f52c208d83427
    us-west-2: # US West (Oregon)
      CITRIXADC: ami-0503d15aed657c87d
    ap-east-1: # Asia Pacific (Hong Kong)
      CITRIXADC: ami-0b44e0d299d3b3a33
    ap-south-1: # Asia Pacific (Mumbai)
      CITRIXADC: ami-027978a22dc893058
    ap-northeast-2: # Asia Pacific (Seoul)
      CITRIXADC: ami-0ad520c016e96f260
    ap-southeast-1: # Asia Pacific (Singapore)
      CITRIXADC: ami-0316840d86abe4e5e
    ap-southeast-2: # Asia Pacific (Sydney)
      CITRIXADC: ami-02098e6dfe08d9299
    ap-northeast-1: # Asia Pacific (Tokyo)
      CITRIXADC: ami-0a5d628c2e1ea45e9
    ca-central-1: # Canada (Central)
      CITRIXADC: ami-02cbae7662e592d24
    eu-central-1: # Europe (Frankfurt)
      CITRIXADC: ami-05d81856537a0cfc2
    eu-west-1: # Europe (Ireland)
      CITRIXADC: ami-023da45cff4446484
    eu-west-2: # Europe (London)
      CITRIXADC: ami-037b51b95111f4231
    eu-west-3: # Europe (Paris)
      CITRIXADC: ami-0bd4c025bd6afab4a
    eu-north-1: # Europe (Stockholm)
      CITRIXADC: ami-01672d9e4fd60f85d
    sa-east-1: # South America (São Paulo)
      CITRIXADC: ami-0c66fc6fff94c64b9
