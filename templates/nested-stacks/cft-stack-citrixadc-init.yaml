AWSTemplateFormatVersion: '2010-09-09'
Outputs:
  ADCInitRole:
    Description: ''
    Export:
      Name: !Sub '${AWS::StackName}-ADCInitRole'
    Value: !Sub 'https://console.aws.amazon.com/iam/home#/roles/${ADCInitRole}'
Parameters:
  ADCCustomPassword:
    Description: Strong password recommended
    NoEcho: true
    Type: String
  ADCInstanceID:
    Description: ''
    Type: String
  ManagementPrivateIP:
    AllowedPattern: ()|(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    ConstraintDescription: Must be a valid IP of the form x.x.x.x
    Default: ''
    Description: ''
    Type: String
  ManagementPrivateSubnetID:
    Description: ''
    Type: AWS::EC2::Subnet::Id
  ManagementSecurityGroupID:
    Description: ''
    Type: AWS::EC2::SecurityGroup::Id
  S3BucketName:
    AllowedPattern: ()|^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    Description: ''
    Type: String
  S3Key:
    Description: ''
    Type: String
Resources:
  ADCInitFunction:
    Properties:
      Code:
        S3Bucket: !Ref 'S3BucketName'
        S3Key: !Ref 'S3Key'
      Description: ADCInitFunction
      Handler: lambda_adc_init.lambda_handler
      Role: !GetAtt 'ADCInitRole.Arn'
      Runtime: python3.6
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-ADCInitFunction'
      Timeout: 900
      VpcConfig:
        SecurityGroupIds:
          - !Ref 'ManagementSecurityGroupID'
        SubnetIds:
          - !Ref 'ManagementPrivateSubnetID'
    Type: AWS::Lambda::Function
  ADCInitRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
        Version: '2012-10-17'
      Description: ''
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - ec2:DescribeInstances
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DescribeSubnets
                  - ec2:DescribeVpcs
                  - ec2:DescribeAvailabilityZones
                  - ec2:DescribeInstanceStatus
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                  - ec2:AttachNetworkInterface
                  - ec2:DetachNetworkInterface
                  - ec2:ModifyNetworkInterfaceAttribute
                  - ec2:ResetNetworkInterfaceAttribute
                  - ec2:AssignPrivateIpAddresses
                  - ec2:UnassignPrivateIpAddresses
                  - ec2:AllocateAddress
                  - ec2:ReleaseAddress
                  - ec2:AssociateAddress
                  - ec2:DisassociateAddress
                Effect: Allow
                Resource: '*'
            Version: '2012-10-17'
          PolicyName: citrixadc-lambda-policy
    Type: AWS::IAM::Role
  AllocateADCInit:
    Properties:
      ADCInstanceID: !Ref 'ADCInstanceID'
      ADCPrivateNSIP: !Ref 'ManagementPrivateIP'
      CustomADCPassword: !Ref 'ADCCustomPassword'
      ServiceToken: !GetAtt 'ADCInitFunction.Arn'
    Type: AWS::CloudFormation::CustomResource
