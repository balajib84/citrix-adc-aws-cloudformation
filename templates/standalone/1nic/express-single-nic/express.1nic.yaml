AWSTemplateFormatVersion: 2010-09-09
Description: Creates a NetScaler VPX Express instance with a single network interface
Metadata:
  Copyright:
    - 'Copyright (c) 2018 Citrix Systems, Inc.'
    - 'All rights reserved.'
    - ''
    - 'Redistribution and use in source and binary forms, with or without'
    - 'modification, are permitted provided that the following conditions are'
    - 'met:'
    - '    * Redistributions of source code must retain the above copyright'
    - '      notice, this list of conditions and the following disclaimer.'
    - '    * Redistributions in binary form must reproduce the above copyright'
    - '      notice, this list of conditions and the following disclaimer in'
    - '      the documentation and/or other materials provided with the'
    - '      distribution.'
    - '    * Neither the name of the Citrix Systems, Inc. nor the'
    - '      names of its contributors may be used to endorse or promote'
    - '      products derived from this software without specific prior written'
    - '      permission.'
    - ''
    - 'THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS'
    - '\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT'
    - 'LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A'
    - 'PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL Citrix Systems,'
    - 'Inc. BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,'
    - 'OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF'
    - 'SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS'
    - 'INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN'
    - 'CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)'
    - 'ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF'
    - 'THE POSSIBILITY OF SUCH DAMAGE.'
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - VpcId
          - SubnetId
      - Label:
          default: Amazon EC2 Configuration
        Parameters:
          - VPXInstanceType
          - KeyName
          - PublishCloudwatchMetrics
    ParameterLabels:
      VpcId:
        default: Which VPC should this be deployed to?
      SubnetId:
        default: Subnet in the VPC (subnet should be able to accept public traffic)?
      VPXInstanceType:
        default: Instance Type for the NetScaler VPX. t2.large is recommended
      KeyName:
        default: SSH Keypair
      PublishCloudwatchMetrics:
        default: Publish Cloudwatch Metrics
Mappings:
  AWSRegionArch2AMI:
    ap-south-1:
      '64': ami-6a421c05
    us-east-1:
      '64': ami-9dd12ce0
    us-east-2:
      '64': ami-728eb917
    ap-southeast-2:
      '64': ami-4a33f228
    ap-northeast-1:
      '64': ami-b86429de
    sa-east-1:
      '64': ami-6ef1ba02
    ap-southeast-1:
      '64': ami-891a4ef5
    ca-central-1:
      '64': ami-17bc3b73
    ap-northeast-2:
      '64': ami-7209a41c
    us-west-2:
      '64': ami-901580e8
    us-west-1:
      '64': ami-41f0fa21
    eu-central-1:
      '64': ami-f8f19e97
    eu-west-1:
      '64': ami-ceb8f8b7
    eu-west-2:
      '64': ami-e1947386
Parameters:
  VpcId:
    Type: 'AWS::EC2::VPC::Id'
    Description: VpcId of an existing Virtual Private Cloud in the region
  VPXInstanceType:
    ConstraintDescription: Must be a valid EC2 instance type.
    Type: String
    Description: Machine size for the VPX instance
    Default: t2.large
    AllowedValues:
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
  SubnetId:
    Type: 'AWS::EC2::Subnet::Id'
    Description: SubnetId of an existing subnet in the specified VPC
  KeyName:
    ConstraintDescription: 'Can contain only alphanumeric characters, spaces, dashes and underscores.'
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    MinLength: '1'
    AllowedPattern: '[-_ a-zA-Z0-9]*'
    MaxLength: '64'
    Type: 'AWS::EC2::KeyPair::KeyName'
  PublishCloudwatchMetrics:
    Type: String
    Description: Enter 'Yes' to enable publishing of VPX metrics to Cloudwatch, or 'No' to disable publishing.
    Default: !!str Yes
    AllowedValues:
      - !!str Yes
      - !!str No
Conditions: {}
Resources:
  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow http/s and ssh to  ENI from Internet
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
  CitrixNodesInstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Path: /
      Policies:
        - PolicyName: Citrixnode
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'ec2:DescribeInstances'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:DetachNetworkInterface'
                  - 'ec2:AttachNetworkInterface'
                  - 'autoscaling:*'
                  - 'sns:*'
                  - 'sqs:*'
                  - "cloudwatch:PutMetricData"
                Resource: '*'
                Effect: Allow
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
  CitrixNodesProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref CitrixNodesInstanceRole
  VPXInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      Tags:
        - Value: NetScalerExpressVPX
          Key: Name
        - Value: LoadBalancer
          Key: Purpose
      ImageId: !FindInMap
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - 64
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref CitrixNodesProfile
      InstanceType: !Ref VPXInstanceType
      NetworkInterfaces:
        - AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          GroupSet:
            - !Ref SecurityGroup
          SecondaryPrivateIpAddressCount: 2
          SubnetId: !Ref SubnetId
      UserData: 
        Fn::Base64:
          Fn::Join:
          - "="
          - - PublishCloudwatchMetrics
            - !Ref PublishCloudwatchMetrics
  ElasticIpVIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  AssociateElasticIpVIP:
    Type: 'AWS::EC2::EIPAssociation'
    Properties:
      AllocationId: !GetAtt
        - ElasticIpVIP
        - AllocationId
      InstanceId: !Ref VPXInstance
      PrivateIpAddress: !GetAtt
        - VPXBootStrap
        - VIP
  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: lambdalogtocloudwatch
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'
        - PolicyName: lambdaallowreadec2
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'ec2:DescribeInstances'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:DescribeSubnets'
                  - 'ec2:DescribeVpcs'
                Resource: '*'
                Effect: Allow
  VPXBootStrapFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: !Join
          - ''
          - - ns-vpx-cft-fn-
            - !Ref 'AWS::Region'
        S3Key: vpx-1nic-bootstrap.zip
      Handler: handler.lambda_handler
      Runtime: python2.7
      Timeout: '240'
      Role: !GetAtt
        - LambdaExecutionRole
        - Arn
  VPXBootStrap:
    Type: 'Custom::LambdaCallout'
    Properties:
      ServiceToken: !GetAtt
        - VPXBootStrapFunction
        - Arn
      EC2InstanceId: !Ref VPXInstance
      PublicNSIP: !GetAtt
        - VPXInstance
        - PublicIp
      SubnetId: !Ref SubnetId
Outputs:
  ManagementURL:
    Description: HTTPS URL to the Management GUI (uses self-signed cert)
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - VPXInstance
          - PublicIp
  ManagementURL2:
    Description: HTTP URL to the Management GUI
    Value: !Join
      - ''
      - - 'http://'
        - !GetAtt
          - VPXInstance
          - PublicIp
  InstanceIdNS:
    Description: Instance Id of newly created VPX instance
    Value: !Ref VPXInstance
  PublicIpVIP:
    Description: Elastic IP address of the VPX instance associated with the VIP
    Value: !Ref ElasticIpVIP
  NSIp:
    Description: Private IP (NS IP) used for management
    Value: !GetAtt
      - VPXInstance
      - PrivateIp
  PublicNSIp:
    Description: Public IP (NS IP) used for management
    Value: !GetAtt
      - VPXInstance
      - PublicIp
  PrivateVIP:
    Description: Private IP address of the VPX instance associated with the VIP
    Value: !GetAtt
      - VPXBootStrap
      - VIP
  SNIP:
    Description: Private IP address of the VPX instance associated with the SNIP
    Value: !GetAtt
      - VPXBootStrap
      - SNIP
  SecurityGroup:
    Description: Security group id that the VPX belongs to
    Value: !Ref SecurityGroup

